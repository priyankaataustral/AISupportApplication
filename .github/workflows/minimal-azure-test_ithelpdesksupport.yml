name: Build and deploy Python app to Azure Web App - ITHelpDeskSupport

on:
  push:
    branches: [ minimal-azure-test ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Fresh vendor dir
      - name: Clean .python_packages
        working-directory: backend
        run: rm -rf .python_packages

      # IMPORTANT: Vendor ONLY portable manylinux wheels (no local glibc tie)
      # This avoids the GLIBC_2.33 error from cryptography/_rust.abi3.so
      - name: Install deps as manylinux wheels into .python_packages
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          # Use cross-platform install so pip downloads manylinux_2_28 wheels
          pip install --upgrade --only-binary=:all: \
            --platform manylinux_2_28_x86_64 --implementation cp --python-version 3.12 --abi cp312 \
            --target ./.python_packages/lib/site-packages \
            -r requirements.txt

      # Safety: ensure no Python2 'uuid' backport shadows stdlib
      - name: Remove uuid backport if present
        working-directory: backend
        run: |
          rm -f ./.python_packages/lib/site-packages/uuid.py \
                ./.python_packages/lib/site-packages/uuid.pyc || true

      # Zip the *contents* of backend so run.py, requirements.txt, .python_packages are at ZIP ROOT
      - name: Create deployment zip
        working-directory: backend
        run: zip -r ../app.zip .

      - name: Deploy to Azure Web App (publish profile)
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ITHelpDeskSupport'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: app.zip
